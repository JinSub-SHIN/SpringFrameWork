<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- url 어떤 요청이 되었을떄 ROLE 체크 할 것인지??? -->
	<sec:http auto-config="true" use-expressions="true">
		<sec:intercept-url pattern="/user/login" access="hasRole('ROLE_USER')"/>
		<sec:intercept-url pattern="/member/**" access="isAuthenticated()"/>
		<sec:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />	
				
		<sec:form-login 
		login-page="/user/loginForm"
		login-processing-url="/loginCheck"
		username-parameter="id"
		password-parameter="pwd"
		default-target-url="/"
		authentication-failure-url="/user/loginForm?ng"
		/>
		
		<sec:logout
		logout-url="/logout"
		invalidate-session="true"
		delete-cookies="JSESSIONID"
		logout-success-url="/"
		/>
			
	</sec:http>
	
	<!-- 계정에 따른 권한 설정이 필요하다 (DB or in Memory) -->
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="user" password="1234" authorities="ROLE_USER"/>
				<sec:user name="admin" password="1234" authorities="ROLE_USER,ROLE_ADMIN"/>
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>

</beans>
